name: "CodeQL 분석"

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # 매주 일요일 자정에 실행
  workflow_dispatch:

jobs:
  analyze:
    name: 분석
    runs-on: windows-latest
    outputs:
      artifact_name: ${{ steps.set_artifact_name.outputs.artifact_name }}
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v3

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.2.0

    - name: NuGet 패키지 복원
      run: nuget restore WindowLocker.sln

    - name: 아티팩트 이름 설정
      id: set_artifact_name
      run: |
        echo "artifact_name=codeql-sarif-results-${{ github.run_number }}" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: CodeQL 초기화
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: 빌드
      run: msbuild WindowLocker.sln /p:Configuration=Debug /p:Platform="Any CPU"

    - name: CodeQL 분석 수행
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{ matrix.language }}"
        
    - name: 결과 디렉토리 확인
      run: |
        echo "CodeQL 결과 디렉토리 확인:"
        if (Test-Path -Path "${{ runner.temp }}") {
          Get-ChildItem -Path "${{ runner.temp }}" -Recurse | Where-Object { $_.FullName -like "*codeql*" } | Select-Object FullName
        } else {
          echo "임시 디렉토리가 없습니다."
        }
      shell: pwsh
        
    - name: SARIF 결과 업로드
      id: upload_sarif
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.set_artifact_name.outputs.artifact_name }}
        path: ${{ runner.temp }}/**/sarif/*.sarif
        retention-days: 30
        if-no-files-found: warn
        
  download-security-results:
    needs: analyze
    if: always() && needs.analyze.result == 'success'
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
    
    steps:
    - name: 보안 분석 결과 다운로드
      uses: actions/download-artifact@v3
      with:
        name: ${{ needs.analyze.outputs.artifact_name }}
        path: downloaded-security-results
        
    - name: 보안 분석 결과 확인
      run: |
        echo "아티팩트 이름: ${{ needs.analyze.outputs.artifact_name }}"
        echo "다운로드된 파일 목록:"
        Get-ChildItem -Path downloaded-security-results -Recurse
      shell: pwsh 